<UserControl
    x:Class="JellyMusic.Views.PlaybarView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converters="clr-namespace:JellyMusic.Converters"
    xmlns:ViewModels="clr-namespace:JellyMusic.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:JellyMusic.Views"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DataContext="{d:DesignInstance ViewModels:PlaybarViewModel}"
    FontFamily="./#Comfortaa Light"
    TextElement.FontSize="15"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="White"
    TextOptions.TextFormattingMode="Ideal"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Converters:TimeSpanToMinAndSecConverter x:Key="ToMinAndSecConverter" />
        <Converters:TimeSpanToSecondsConverter x:Key="ToSecondsConverter" />

        <Converters:BoolToPlayPauseToggleConverter x:Key="BoolToPlayPauseConverter" />
        <Converters:BoolToShuffleToggleConverter x:Key="BoolToShuffleConverter" />
        <Converters:BoolToLoopToggleConverter x:Key="BoolToLoopConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Rectangle Grid.ColumnSpan="3" Fill="{StaticResource Panel.Semitransparent}" />
        <StackPanel
            Grid.Column="0"
            Width="200"
            Margin="10"
            HorizontalAlignment="Left"
            Orientation="Vertical">
            <TextBlock Foreground="{StaticResource Text.Secondary}" Text="PREVIOUS" />
            <TextBlock
                MaxHeight="50"
                Text="{Binding PreviousTrackTitle, TargetNullValue=First track playing}"
                TextTrimming="CharacterEllipsis"
                TextWrapping="Wrap" />
        </StackPanel>
        <StackPanel
            Grid.Column="1"
            HorizontalAlignment="Center"
            Orientation="Vertical">
            <StackPanel
                Margin="10"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Orientation="Horizontal">
                <Button
                    x:Name="ButtonShuffle"
                    Width="30"
                    Height="30"
                    Margin="0,0,80,0"
                    Command="{Binding ShuffleCommand}"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <materialDesign:PackIcon
                        Width="auto"
                        Height="auto"
                        Kind="{Binding IsShuffled, Converter={StaticResource BoolToShuffleConverter}}" />
                </Button>
                <Button
                    x:Name="ButtonPrevious"
                    Width="40"
                    Height="40"
                    Command="{Binding PlayPreviousCommand}"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <materialDesign:PackIcon
                        Width="auto"
                        Height="auto"
                        Kind="SkipPrevious" />
                </Button>
                <Button
                    x:Name="ButtonPlay"
                    Width="50"
                    Height="50"
                    Margin="50,0"
                    Command="{Binding PlayCommand}"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <materialDesign:PackIcon
                        Width="auto"
                        Height="auto"
                        Kind="{Binding IsPlaying, Converter={StaticResource BoolToPlayPauseConverter}}" />
                </Button>
                <Button
                    x:Name="ButtonNext"
                    Width="40"
                    Height="40"
                    Command="{Binding PlayNextCommand}"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <materialDesign:PackIcon
                        Width="auto"
                        Height="auto"
                        Kind="SkipNext" />
                </Button>
                <Button
                    x:Name="ButtonLoop"
                    Width="30"
                    Height="30"
                    Margin="80,0,0,0"
                    Command="{Binding LoopCommand}"
                    Style="{StaticResource MaterialDesignIconButton}">
                    <materialDesign:PackIcon
                        Width="auto"
                        Height="auto"
                        Kind="{Binding Loop, Converter={StaticResource BoolToLoopConverter}}" />
                </Button>
            </StackPanel>
            <Grid x:Name="SlidersPanel">
                <StackPanel
                    x:Name="ProgressBarPanel"
                    HorizontalAlignment="Left"
                    Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="{Binding CurrentProgress, Converter={StaticResource ToMinAndSecConverter}, TargetNullValue=N/A}" />
                    <Slider
                        x:Name="ProgressBar"
                        Width="200"
                        Margin="10,0"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding IsActiveTrackSelected}"
                        IsMoveToPointEnabled="True"
                        Maximum="{Binding Duration, Converter={StaticResource ToSecondsConverter}, Mode=OneWay}"
                        Minimum="0"
                        Thumb.DragCompleted="ProgressBar_DragCompleted"
                        Thumb.DragStarted="ProgressBar_DragStarted"
                        Value="{Binding CurrentProgress, Converter={StaticResource ToSecondsConverter}, TargetNullValue=0}" />

                    <TextBlock VerticalAlignment="Center" Text="{Binding Duration, Converter={StaticResource ToMinAndSecConverter}}" />
                </StackPanel>
                <StackPanel
                    x:Name="VolumeControlPanel"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <materialDesign:PackIcon
                        Width="25"
                        Height="25"
                        Kind="VolumeLow" />
                    <Slider
                        x:Name="VolumeControl"
                        Width="100"
                        Margin="5,0"
                        VerticalAlignment="Center"
                        IsMoveToPointEnabled="True"
                        LargeChange="0.1"
                        Maximum="1.0"
                        Minimum="0"
                        Value="{Binding CurrentVolume, Mode=TwoWay}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <materialDesign:PackIcon
                        Width="25"
                        Height="25"
                        Kind="VolumeHigh" />
                </StackPanel>
            </Grid>
        </StackPanel>
        <StackPanel
            Grid.Column="2"
            Margin="10"
            HorizontalAlignment="Right"
            Orientation="Vertical">
            <TextBlock
                Foreground="{StaticResource Text.Secondary}"
                Text="UP NEXT"
                TextAlignment="Right" />
            <TextBlock
                MaxHeight="50"
                Text="{Binding NextTrackTitle, TargetNullValue=Last track playing}"
                TextAlignment="Right"
                TextTrimming="CharacterEllipsis"
                TextWrapping="Wrap" />
        </StackPanel>
    </Grid>
</UserControl>
