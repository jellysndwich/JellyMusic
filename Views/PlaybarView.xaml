<UserControl x:Class="JellyMusic.Views.PlaybarView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:JellyMusic.Views"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ViewModels="clr-namespace:JellyMusic.ViewModels"
             xmlns:Converters="clr-namespace:JellyMusic.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance ViewModels:PlaybarViewModel}"
             
             TextElement.Foreground="White"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="15"
             TextOptions.TextFormattingMode="Ideal" 
             FontFamily="Open Sans">
    <UserControl.Resources>
        <Converters:TimeSpanToMinAndSecConverter x:Key="ToMinAndSecConverter" />
        <Converters:TimeSpanToSecondsConverter x:Key="ToSecondsConverter" />
        
        <Converters:BoolToPlayPauseToggleConverter x:Key="BoolToPlayPauseConverter"/>
        <Converters:BoolToShuffleToggleConverter x:Key="BoolToShuffleConverter"/>
        <Converters:BoolToLoopToggleConverter x:Key="BoolToLoopConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Rectangle Fill="{StaticResource Panel.Semitransparent}" Grid.ColumnSpan="3"/>
        <StackPanel Orientation="Vertical"
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            Margin="10"
                            Width="200">
            <TextBlock Text="PREVIOUS" 
                               Foreground="{StaticResource Text.Secondary}"/>
            <TextBlock Text="{Binding PreviousTrackTitle, TargetNullValue=First track playing}" 
                       TextTrimming="CharacterEllipsis"
                       TextWrapping="Wrap"
                       MaxHeight="50"/>
        </StackPanel>
        <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Center" 
                            Grid.Column="1">
            <StackPanel Orientation="Horizontal" 
                            VerticalAlignment="Top" HorizontalAlignment="Center" 
                            Margin="10">
                <Button x:Name="ButtonShuffle" 
                        Command="{Binding ShuffleCommand}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Width="30" Height="30"
                        Margin="0,0,80,0">
                    <materialDesign:PackIcon Kind="{Binding IsShuffled, Converter={StaticResource BoolToShuffleConverter}}" Width="auto" Height="auto"/>
                </Button>
                <Button x:Name="ButtonPrevious"
                        Command="{Binding PlayPreviousCommand}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Width="40" Height="40">
                    <materialDesign:PackIcon Kind="SkipPrevious" Width="auto" Height="auto"/>
                </Button>
                <Button x:Name="ButtonPlay" 
                        Command="{Binding PlayCommand}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Width="50" Height="50" Margin="50,0">
                    <materialDesign:PackIcon Kind="{Binding IsPlaying, Converter={StaticResource BoolToPlayPauseConverter}}"
                        Width="auto" Height="auto"/>
                </Button>
                <Button x:Name="ButtonNext"
                        Command="{Binding PlayNextCommand}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Width="40" Height="40">
                    <materialDesign:PackIcon Kind="SkipNext" Width="auto" Height="auto"/>
                </Button>
                <Button x:Name="ButtonLoop" 
                        Command="{Binding LoopCommand}"
                        Style="{StaticResource MaterialDesignIconButton}"
                        Width="30" Height="30"
                            Margin="80,0,0,0">
                    <materialDesign:PackIcon Kind="{Binding Loop, Converter={StaticResource BoolToLoopConverter}}" Width="auto" Height="auto"/>
                </Button>
            </StackPanel>
            <Grid x:Name="SlidersPanel">
                <StackPanel x:Name="ProgressBarPanel" Orientation="Horizontal"
                                HorizontalAlignment="Left">
                    <TextBlock Text="{Binding CurrentProgress, Converter={StaticResource ToMinAndSecConverter}, TargetNullValue=N/A}"
                               VerticalAlignment="Center"/>
                    <Slider x:Name="ProgressBar" 
                        IsMoveToPointEnabled="True"
                        Minimum="0" Maximum="{Binding Duration, Converter={StaticResource ToSecondsConverter}, Mode=OneWay}" 
                        Value="{Binding CurrentProgress , Converter={StaticResource ToSecondsConverter}, Delay=10, TargetNullValue=0}"
                        Width="200"
                        Margin="10,0" VerticalAlignment="Center"
                        Thumb.DragStarted="ProgressBar_DragStarted"
                        Thumb.DragCompleted="ProgressBar_DragCompleted"/>

                    <TextBlock Text="{Binding Duration, Converter={StaticResource ToMinAndSecConverter}}"
                               VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel x:Name="VolumeControlPanel" Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <materialDesign:PackIcon Kind="VolumeLow" Width="25" Height="25"/>
                    <Slider x:Name="VolumeControl" 
                            IsMoveToPointEnabled="False"
                            Minimum="0" Maximum="1.0" Value="{Binding CurrentVolume, Mode=TwoWay}"
                            Width="100" VerticalAlignment="Center"
                            Margin="5,0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="ValueChanged">
                                <i:InvokeCommandAction Command="{Binding VolumeControlValueChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Slider>
                    <materialDesign:PackIcon Kind="VolumeHigh" Width="25" Height="25"/>
                </StackPanel>
            </Grid>
        </StackPanel>
        <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Right"
                            Margin="10" Grid.Column="2">
            <TextBlock Text="UP NEXT" 
                               Foreground="{StaticResource Text.Secondary}"
                               TextAlignment="Right"/>
            <TextBlock Text="{Binding NextTrackTitle, TargetNullValue=Last track playing}" 
                       TextTrimming="CharacterEllipsis"
                       TextWrapping="Wrap"
                       MaxHeight="50"
                       TextAlignment="Right"/>
        </StackPanel>
    </Grid>
</UserControl>
